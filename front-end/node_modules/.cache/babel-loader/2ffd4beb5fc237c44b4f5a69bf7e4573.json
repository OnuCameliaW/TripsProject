{"ast":null,"code":"var _jsxFileName = \"/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js\";\nimport React from 'react';\nimport './marker.js';\nimport ol from 'openlayers';\nimport 'ol/ol.css';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: []\n      })\n    });\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [new ol.layer.Tile({\n        source: new ol.source.OSM()\n      }), featuresLayer],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([27.587914, 47.151726]),\n        zoom: 8\n      })\n    });\n    this.setState({\n      map: map,\n      featuresLayer: featuresLayer\n    });\n  }\n\n  addMarkers() {\n    var markers = [];\n    markers.push(createMarker());\n    var colors = ['red', 'green', 'blue', 'black'];\n    var iconStyles = [];\n    colors.forEach(function (color) {\n      iconStyles.push(new ol.style.Style({\n        image: new ol.style.Circle({\n          radius: 6,\n          stroke: new ol.style.Stroke({\n            color: '#fff'\n          }),\n          fill: new ol.style.Fill({\n            color: color\n          })\n        })\n      }));\n    });\n    var labelStyle = new ol.style.Style({\n      text: new ol.style.Text({\n        font: '12px Calibri,sans-serif',\n        overflow: true,\n        fill: new ol.style.Fill({\n          color: '#000'\n        }),\n        stroke: new ol.style.Stroke({\n          color: '#fff',\n          width: 3\n        }),\n        textBaseline: 'bottom',\n        offsetY: -8\n      })\n    });\n    var vectorSource = new ol.source.Vector({\n      features: markers\n    });\n    var markerVectorLayer = new ol.layer.Vector({\n      source: vectorSource,\n      style: function (feature) {\n        var name = feature.get('name');\n        var iconStyle = iconStyles[parseInt(name) % colors.length];\n        labelStyle.getText().setText(name);\n        return [iconStyle, labelStyle];\n      }\n    });\n    this.state.map.addLayer(markerVectorLayer); //map.getView().fit(vectorSource.getExtent(), map.getSize());\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(new ol.source.Vector({\n      features: this.props.routes\n    }));\n    this.addMarkers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js"],"names":["React","ol","Tile","TileLayer","Vector","VectorLayer","Map","Component","componentDidMount","featuresLayer","layer","source","features","map","target","refs","mapContainer","layers","OSM","view","View","center","proj","fromLonLat","zoom","setState","addMarkers","markers","push","createMarker","colors","iconStyles","forEach","color","style","Style","image","Circle","radius","stroke","Stroke","fill","Fill","labelStyle","text","Text","font","overflow","width","textBaseline","offsetY","vectorSource","markerVectorLayer","feature","name","get","iconStyle","parseInt","length","getText","setText","state","addLayer","componentDidUpdate","prevProps","prevState","setSource","props","routes","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './marker.js';\nimport ol from 'openlayers';\nimport 'ol/ol.css';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\n\n\nclass Map extends React.Component {\n\tcomponentDidMount() {\n\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features:[],\n      })\n    });\n\n\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [\n\t\tnew ol.layer.Tile({\n\t\t  source: new ol.source.OSM()\n\t\t}),\n        featuresLayer\n      ],\n\t\tview: new ol.View({\n\t\t      center: ol.proj.fromLonLat([27.587914,47.151726]),\n\t\t      zoom: 8\n\t\t    })\n    });\nthis.setState({ \n      map: map,\n      featuresLayer: featuresLayer\n    });\n   }\n\n addMarkers(){\n \tvar markers = [];\n\n\tmarkers.push(createMarker());\n\nvar colors = ['red', 'green', 'blue', 'black'];\nvar iconStyles = [];\n\ncolors.forEach(function(color) {\n  iconStyles.push(new ol.style.Style({\n    image:  new ol.style.Circle({\n        radius: 6,\n        stroke: new ol.style.Stroke({\n            color: '#fff'\n        }),\n        fill: new ol.style.Fill({\n            color: color\n        })\n    })\n  }))\n});\n\nvar labelStyle = new ol.style.Style({\n    text: new ol.style.Text({\n        font: '12px Calibri,sans-serif',\n        overflow: true,\n        fill: new ol.style.Fill({\n            color: '#000'\n        }),\n        stroke: new ol.style.Stroke({\n            color: '#fff',\n            width: 3\n        }),\n        textBaseline: 'bottom',\n        offsetY: -8\n    })\n});\n\nvar vectorSource = new ol.source.Vector({\n  features: markers\n});\nvar markerVectorLayer = new ol.layer.Vector({\n  source: vectorSource,\n  style: function(feature) {\n      var name = feature.get('name');\n      var iconStyle = iconStyles[parseInt(name)%colors.length];\n      labelStyle.getText().setText(name);\n      return [iconStyle, labelStyle];\n  }\n});\n\nthis.state.map.addLayer(markerVectorLayer);\n//map.getView().fit(vectorSource.getExtent(), map.getSize());\n\n }\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(\n      new ol.source.Vector({\n        features: this.props.routes\n      })\n    );\nthis.addMarkers();\n  }\n\n  render() {\n    return <div ref=\"mapContainer\"> </div>;\n  }\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}