{"ast":null,"code":"var _jsxFileName = \"/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js\";\nimport React from 'react';\nimport { getMarkersLayer } from './markerLayer.js';\nimport ol from 'openlayers';\nimport 'ol/ol.css';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: []\n      })\n    });\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [new ol.layer.Tile({\n        source: new ol.source.OSM()\n      }), featuresLayer],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([27.587914, 47.151726]),\n        zoom: 8\n      })\n    });\n    this.setState({\n      map: map,\n      featuresLayer: featuresLayer\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(new ol.source.Vector({\n      features: this.props.routes\n    })); //this.state.map.addLayer(markerVectorLayer);\n\n    var markersArray = [{\n      'latitude': 47.151726,\n      'longitude': 27.587914,\n      'name': 'Iasi'\n    }, {\n      'latitude': 46.7712,\n      'longitude': 23.6236,\n      'name': 'Cluj'\n    }];\n    var markerVectorLayer = getMarkersLayer(markersArray);\n    var layerLines = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [new ol.Feature({\n          geometry: new ol.geom.LineString(markerVectorLayer, 'XY'),\n          name: 'Line'\n        })]\n      })\n    });\n    this.state.map.addLayer(markerVectorLayer); //this.state.map.getView().fit(markerVectorLayer.getSource().getExtent(), this.state.map.getSize());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js"],"names":["React","getMarkersLayer","ol","Tile","TileLayer","Vector","VectorLayer","Map","Component","componentDidMount","featuresLayer","layer","source","features","map","target","refs","mapContainer","layers","OSM","view","View","center","proj","fromLonLat","zoom","setState","componentDidUpdate","prevProps","prevState","state","setSource","props","routes","markersArray","markerVectorLayer","layerLines","Feature","geometry","geom","LineString","name","addLayer","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAO,WAAP;AACA,SAAQC,IAAI,IAAIC,SAAhB,EAA2BC,MAAM,IAAIC,WAArC,QAAuD,UAAvD;;AAGA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AACjCC,EAAAA,iBAAiB,GAAG;AAEjB,QAAIC,aAAa,GAAG,IAAIR,EAAE,CAACS,KAAH,CAASN,MAAb,CAAoB;AACtCO,MAAAA,MAAM,EAAE,IAAIV,EAAE,CAACU,MAAH,CAAUP,MAAd,CAAqB;AAC3BQ,QAAAA,QAAQ,EAAC;AADkB,OAArB;AAD8B,KAApB,CAApB;AAMA,QAAIC,GAAG,GAAG,IAAIZ,EAAE,CAACK,GAAP,CAAW;AACnBQ,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADC;AAEnBC,MAAAA,MAAM,EAAE,CACZ,IAAIhB,EAAE,CAACS,KAAH,CAASR,IAAb,CAAkB;AAChBS,QAAAA,MAAM,EAAE,IAAIV,EAAE,CAACU,MAAH,CAAUO,GAAd;AADQ,OAAlB,CADY,EAINT,aAJM,CAFW;AAQvBU,MAAAA,IAAI,EAAE,IAAIlB,EAAE,CAACmB,IAAP,CAAY;AACZC,QAAAA,MAAM,EAAEpB,EAAE,CAACqB,IAAH,CAAQC,UAAR,CAAmB,CAAC,SAAD,EAAW,SAAX,CAAnB,CADI;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAZ;AARiB,KAAX,CAAV;AAcH,SAAKC,QAAL,CAAc;AACRZ,MAAAA,GAAG,EAAEA,GADG;AAERJ,MAAAA,aAAa,EAAEA;AAFP,KAAd;AAIG;;AAEFiB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKC,KAAL,CAAWpB,aAAX,CAAyBqB,SAAzB,CACE,IAAI7B,EAAE,CAACU,MAAH,CAAUP,MAAd,CAAqB;AACnBQ,MAAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWC;AADF,KAArB,CADF,EADuC,CAOvC;;AACA,QAAIC,YAAY,GAAG,CAClB;AACA,kBAAY,SADZ;AAEA,mBAAa,SAFb;AAGA,cAAQ;AAHR,KADkB,EAMlB;AACA,kBAAY,OADZ;AAEA,mBAAa,OAFb;AAGA,cAAQ;AAHR,KANkB,CAAnB;AAcH,QAAIC,iBAAiB,GAAGlC,eAAe,CAACiC,YAAD,CAAvC;AAEA,QAAIE,UAAU,GAAG,IAAIlC,EAAE,CAACS,KAAH,CAASN,MAAb,CAAoB;AAClCO,MAAAA,MAAM,EAAE,IAAIV,EAAE,CAACU,MAAH,CAAUP,MAAd,CAAqB;AACzBQ,QAAAA,QAAQ,EAAE,CAAC,IAAIX,EAAE,CAACmC,OAAP,CAAe;AACtBC,UAAAA,QAAQ,EAAE,IAAIpC,EAAE,CAACqC,IAAH,CAAQC,UAAZ,CAAuBL,iBAAvB,EAA0C,IAA1C,CADY;AAEtBM,UAAAA,IAAI,EAAE;AAFgB,SAAf,CAAD;AADe,OAArB;AAD0B,KAApB,CAAjB;AASA,SAAKX,KAAL,CAAWhB,GAAX,CAAe4B,QAAf,CAAwBP,iBAAxB,EAjC0C,CAkC1C;AACE;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AApE+B;;AAsElC,eAAepC,GAAf","sourcesContent":["import React from 'react';\nimport {getMarkersLayer} from './markerLayer.js';\n\nimport ol from 'openlayers';\nimport 'ol/ol.css';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\n\n\nclass Map extends React.Component {\n\tcomponentDidMount() {\n\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features:[],\n      })\n    });\n\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [\n\t\tnew ol.layer.Tile({\n\t\t  source: new ol.source.OSM()\n\t\t}),\n        featuresLayer\n      ],\n\t\tview: new ol.View({\n\t\t      center: ol.proj.fromLonLat([27.587914,47.151726]),\n\t\t      zoom: 8\n\t\t    })\n    });\n\n\tthis.setState({ \n\t      map: map,\n\t      featuresLayer: featuresLayer\n\t    });\n   }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(\n      new ol.source.Vector({\n        features: this.props.routes\n      })\n    );\n\n    //this.state.map.addLayer(markerVectorLayer);\n    var markersArray = [\n    \t{\n    \t'latitude': 47.151726,\n    \t'longitude': 27.587914,\n    \t'name': 'Iasi'\n    \t},\n    \t{\n    \t'latitude': 46.7712,\n    \t'longitude': 23.6236,\n    \t'name': 'Cluj'\n    \t}\n    ];\n\n\n\tvar markerVectorLayer = getMarkersLayer(markersArray);\n\n\tvar layerLines = new ol.layer.Vector({\n    source: new ol.source.Vector({\n        features: [new ol.Feature({\n            geometry: new ol.geom.LineString(markerVectorLayer, 'XY'),\n            name: 'Line'\n        })]\n    })\n});\n\t\n\tthis.state.map.addLayer(markerVectorLayer);\n\t//this.state.map.getView().fit(markerVectorLayer.getSource().getExtent(), this.state.map.getSize());\n  }\n\n  render() {\n    return <div ref=\"mapContainer\"> </div>;\n  }\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}