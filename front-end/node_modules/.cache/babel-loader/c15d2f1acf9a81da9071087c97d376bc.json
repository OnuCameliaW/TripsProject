{"ast":null,"code":"var _jsxFileName = \"/Users/cameliaonu/Documents/TripsProject/front-end/src/components/overlayComponent/overlay.js\";\nimport React from 'react';\nimport Autocomplete from 'react-autocomplete';\n\nclass Overlay extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      items: []\n    };\n  }\n\n  async onChangeHandler(event, value) {\n    this.setState({\n      value\n    });\n    var promise = await fetch(\"https://places.cit.api.here.com/places/v1/autosuggest?at=47.151726,27.587914&q=\".concat(this.state.value, \"&app_id=eiPUTOVjxY1rwovi7Kwi&app_code=obXES72dtgrH1PgkTGNWNQ\"));\n    var promiseResult = await promise.json();\n    this.setState({\n      items: promiseResult.results\n    });\n    console.log(promiseResult);\n  }\n\n  onSelectHandler(value, item) {\n    this.setState({\n      value\n    });\n  }\n\n  clickHandler() {\n    debugger;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"autocompleteComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      value: this.state.value,\n      inputProps: {\n        id: 'states-autocomplete'\n      },\n      wrapperStyle: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      items: this.state.items,\n      getItemValue: item => item.title,\n      onChange: (event, value) => this.onChangeHandler(event, value),\n      onSelect: (value, item) => this.onSelectHandler(value, item),\n      renderMenu: children => React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, children),\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        className: \"item \".concat(isHighlighted ? 'item-highlighted' : ''),\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, item.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"addButton\",\n      onClick: this.clickHandler(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nexport default Overlay;","map":{"version":3,"sources":["/Users/cameliaonu/Documents/TripsProject/front-end/src/components/overlayComponent/overlay.js"],"names":["React","Autocomplete","Overlay","Component","state","value","items","onChangeHandler","event","setState","promise","fetch","promiseResult","json","results","console","log","onSelectHandler","item","clickHandler","render","id","position","display","title","children","isHighlighted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAA0B,oBAA1B;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AACPC,MAAAA,KAAK,EAAE,EADA;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAF6B;AAAA;;AAOrC,QAAMC,eAAN,CAAsBC,KAAtB,EAA6BH,KAA7B,EAAmC;AACjC,SAAKI,QAAL,CAAc;AAACJ,MAAAA;AAAD,KAAd;AACA,QAAIK,OAAO,GAAG,MAAMC,KAAK,0FAAmF,KAAKP,KAAL,CAAWC,KAA9F,kEAAzB;AACD,QAAIO,aAAa,GAAG,MAAMF,OAAO,CAACG,IAAR,EAA1B;AACA,SAAKJ,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEM,aAAa,CAACE;AAAvB,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACA;;AAEDK,EAAAA,eAAe,CAACZ,KAAD,EAAQa,IAAR,EAAa;AAC3B,SAAKT,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACA;;AAEDc,EAAAA,YAAY,GAAE;AACf;AACE;;AAEDC,EAAAA,MAAM,GAAG;AACN,WAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,YAAD;AACK,MAAA,KAAK,EAAG,KAAKhB,KAAL,CAAWC,KADxB;AAEK,MAAA,UAAU,EAAE;AAAEgB,QAAAA,EAAE,EAAE;AAAN,OAFjB;AAGK,MAAA,YAAY,EAAE;AAAEC,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAHnB;AAIK,MAAA,KAAK,EAAG,KAAKnB,KAAL,CAAWE,KAJxB;AAKK,MAAA,YAAY,EAAGY,IAAI,IAAIA,IAAI,CAACM,KALjC;AAMK,MAAA,QAAQ,EAAE,CAAChB,KAAD,EAAQH,KAAR,KAAkB,KAAKE,eAAL,CAAqBC,KAArB,EAA4BH,KAA5B,CANjC;AAOK,MAAA,QAAQ,EAAE,CAACA,KAAD,EAAQa,IAAR,KAAiB,KAAKD,eAAL,CAAqBZ,KAArB,EAA4Ba,IAA5B,CAPhC;AAQK,MAAA,UAAU,EAAGO,QAAQ,IACnB;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,QADJ,CATP;AAaK,MAAA,UAAU,EAAG,CAACP,IAAD,EAAOQ,aAAP,KACX;AACE,QAAA,SAAS,iBAAUA,aAAa,GAAG,kBAAH,GAAwB,EAA/C,CADX;AAEE,QAAA,GAAG,EAAGR,IAAI,CAACG,EAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIH,IAAI,CAACM,KAHT,CAdP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADI,EAwBJ;AACC,MAAA,SAAS,EAAC,WADX;AAEC,MAAA,OAAO,EAAE,KAAKL,YAAL,EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxBI,CAAP;AA4BD;;AApDmC;;AAsDtC,eAAejB,OAAf","sourcesContent":["import React from 'react';\nimport Autocomplete from  'react-autocomplete';\n\nclass Overlay extends React.Component {\n\n\tstate = { \n\t\tvalue: '' ,\n\t\titems: []\n\t};\n\n\tasync onChangeHandler(event, value){ \n\t \tthis.setState({value});\n\t \tvar promise = await fetch(`https://places.cit.api.here.com/places/v1/autosuggest?at=47.151726,27.587914&q=${this.state.value}&app_id=eiPUTOVjxY1rwovi7Kwi&app_code=obXES72dtgrH1PgkTGNWNQ`);\n\t\tvar promiseResult = await promise.json();\n\t\tthis.setState({ items: promiseResult.results });\n\t\tconsole.log(promiseResult);\t\n\t}\n\n\tonSelectHandler(value, item){\n\t\tthis.setState({ value });\n\t}\n\n\tclickHandler(){\ndebugger\n\t}\n\n\trender() {\n    return <div className=\"overlay\">\n    \t\t\t<div className=\"autocompleteComponent\">\n\t\t    \t\t<Autocomplete\n\t\t\t          value={ this.state.value }\n\t\t\t          inputProps={{ id: 'states-autocomplete' }}\n\t\t\t          wrapperStyle={{ position: 'relative', display: 'inline-block' }}\n\t\t\t          items={ this.state.items }\n\t\t\t          getItemValue={ item => item.title }\n\t\t\t          onChange={(event, value) => this.onChangeHandler(event, value) }\n\t\t\t          onSelect={(value, item) => this.onSelectHandler(value, item) }\n\t\t\t          renderMenu={ children => (\n\t\t\t            <div className = \"menu\">\n\t\t\t              { children }\n\t\t\t            </div>\n\t\t\t          )}\n\t\t\t          renderItem={ (item, isHighlighted) => (\n\t\t\t            <div\n\t\t\t              className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n\t\t\t              key={ item.id } >\n\t\t\t              { item.title }\n\t\t\t            </div>\n\t\t\t          )}\n\t\t\t        />  \n    \t\t\t</div>\n    \t\t\t<button \n    \t\t\t\tclassName=\"addButton\"\n    \t\t\t\tonClick={this.clickHandler()}>Add</button>\n    \t</div>;\n  }\n}\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}