{"ast":null,"code":"var _jsxFileName = \"/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js\";\nimport React from 'react';\nimport ol from 'openlayers';\nimport 'ol/ol.css';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    // create feature layer and vector source\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: []\n      })\n    }); // create map object with feature layer\n\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [//default OSM layer\n      new ol.layer.Tile({\n        source: new ol.source.OSM()\n      }), featuresLayer],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([45.9432, 24.9668]),\n        zoom: 4\n      })\n    }); // save map and layer references to local state\n\n    this.setState({\n      map: map,\n      featuresLayer: featuresLayer\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(new ol.source.Vector({\n      features: this.props.routes\n    }));\n  } // handleMapClick(event) {\n  //   // create WKT writer\n  //   var wktWriter = new ol.format.WKT();\n  //   // derive map coordinate (references map from Wrapper Component state)\n  //   var clickedCoordinate = this.state.map.getCoordinateFromPixel(event.pixel);\n  //   // create Point geometry from clicked coordinate\n  //   var clickedPointGeom = new ol.geom.Point( clickedCoordinate );\n  //   // write Point geometry to WKT with wktWriter\n  //   var clickedPointWkt = wktWriter.writeGeometry( clickedPointGeom );\n  //   // place Flux Action call to notify Store map coordinate was clicked\n  //   Actions.setRoutingCoord( clickedPointWkt );\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/cameliaonu/Documents/TripsProject/front-end/src/components/mapComponent/map.js"],"names":["React","ol","Map","Component","componentDidMount","featuresLayer","layer","Vector","source","features","map","target","refs","mapContainer","layers","Tile","OSM","view","View","center","proj","fromLonLat","zoom","setState","componentDidUpdate","prevProps","prevState","state","setSource","props","routes","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACjCC,EAAAA,iBAAiB,GAAG;AAEjB;AACA,QAAIC,aAAa,GAAG,IAAIJ,EAAE,CAACK,KAAH,CAASC,MAAb,CAAoB;AACtCC,MAAAA,MAAM,EAAE,IAAIP,EAAE,CAACO,MAAH,CAAUD,MAAd,CAAqB;AAC3BE,QAAAA,QAAQ,EAAC;AADkB,OAArB;AAD8B,KAApB,CAApB,CAHiB,CASjB;;AACA,QAAIC,GAAG,GAAG,IAAIT,EAAE,CAACC,GAAP,CAAW;AACnBS,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADC;AAEnBC,MAAAA,MAAM,EAAE,CACZ;AACA,UAAIb,EAAE,CAACK,KAAH,CAASS,IAAb,CAAkB;AAChBP,QAAAA,MAAM,EAAE,IAAIP,EAAE,CAACO,MAAH,CAAUQ,GAAd;AADQ,OAAlB,CAFY,EAKNX,aALM,CAFW;AASvBY,MAAAA,IAAI,EAAE,IAAIhB,EAAE,CAACiB,IAAP,CAAY;AACZC,QAAAA,MAAM,EAAElB,EAAE,CAACmB,IAAH,CAAQC,UAAR,CAAmB,CAAC,OAAD,EAAU,OAAV,CAAnB,CADI;AAEZC,QAAAA,IAAI,EAAE;AAFM,OAAZ;AATiB,KAAX,CAAV,CAViB,CAyBjB;;AACA,SAAKC,QAAL,CAAc;AACZb,MAAAA,GAAG,EAAEA,GADO;AAEZL,MAAAA,aAAa,EAAEA;AAFH,KAAd;AAID;;AAEDmB,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKC,KAAL,CAAWtB,aAAX,CAAyBuB,SAAzB,CACE,IAAI3B,EAAE,CAACO,MAAH,CAAUD,MAAd,CAAqB;AACnBE,MAAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWC;AADF,KAArB,CADF;AAKD,GAvC+B,CAyChC;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AA7D+B;;AA+DlC,eAAe7B,GAAf","sourcesContent":["import React from 'react';\n\nimport ol from 'openlayers';\nimport 'ol/ol.css';\n\nclass Map extends React.Component {\n\tcomponentDidMount() {\n\n    // create feature layer and vector source\n    var featuresLayer = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features:[],\n      })\n    });\n\n    // create map object with feature layer\n    var map = new ol.Map({\n      target: this.refs.mapContainer,\n      layers: [\n\t\t//default OSM layer\n\t\tnew ol.layer.Tile({\n\t\t  source: new ol.source.OSM()\n\t\t}),\n        featuresLayer\n      ],\n\t\tview: new ol.View({\n\t\t      center: ol.proj.fromLonLat([45.9432, 24.9668]),\n\t\t      zoom: 4\n\t\t    })\n    });\n\n    // save map and layer references to local state\n    this.setState({ \n      map: map,\n      featuresLayer: featuresLayer\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(\n      new ol.source.Vector({\n        features: this.props.routes\n      })\n    );\n  }\n\n  // handleMapClick(event) {\n\n  //   // create WKT writer\n  //   var wktWriter = new ol.format.WKT();\n\n  //   // derive map coordinate (references map from Wrapper Component state)\n  //   var clickedCoordinate = this.state.map.getCoordinateFromPixel(event.pixel);\n\n  //   // create Point geometry from clicked coordinate\n  //   var clickedPointGeom = new ol.geom.Point( clickedCoordinate );\n\n  //   // write Point geometry to WKT with wktWriter\n  //   var clickedPointWkt = wktWriter.writeGeometry( clickedPointGeom );\n    \n  //   // place Flux Action call to notify Store map coordinate was clicked\n  //   Actions.setRoutingCoord( clickedPointWkt );\n  // }\n\n  render() {\n    return <div ref=\"mapContainer\"> </div>;\n  }\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}