{"ast":null,"code":"var _jsxFileName = \"/Users/cameliaonu/Documents/TripsProject/front-end/src/components/overlayComponent/overlay.js\";\nimport React from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport { getMarkersLayer } from '../mapComponent/markerLayer.js';\n\nclass Overlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      items: [],\n      map: props.map\n    };\n  }\n\n  async onChangeHandler(event, value) {\n    debugger;\n\n    if (this.state.value !== \"\" && value === \"\") {\n      this.setState({\n        items: []\n      });\n    }\n\n    this.setState({\n      value\n    });\n    var promise = await fetch(\"https://places.cit.api.here.com/places/v1/autosuggest?at=47.151726,27.587914&q=\".concat(this.state.value, \"&app_id=eiPUTOVjxY1rwovi7Kwi&app_code=obXES72dtgrH1PgkTGNWNQ\"));\n    var promiseResult = await promise.json();\n    this.setState({\n      items: promiseResult.results\n    });\n    console.log(promiseResult);\n  }\n\n  onSelectHandler(value, item) {\n    this.setState({\n      value\n    });\n    var markerLayer = getMarkersLayer(markersArray);\n    this.state.map.addLayer(markerLayer);\n  }\n\n  clickHandler() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"autocompleteComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      value: this.state.value,\n      inputProps: {\n        id: 'states-autocomplete'\n      },\n      wrapperStyle: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      items: this.state.items,\n      getItemValue: item => item.title,\n      onChange: (event, value) => this.onChangeHandler(event, value),\n      onSelect: (value, item) => this.onSelectHandler(value, item),\n      renderMenu: children => React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, children),\n      renderItem: (item, isHighlighted) => React.createElement(\"div\", {\n        className: \"item \".concat(isHighlighted ? 'item-highlighted' : ''),\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, item.title),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"addButton\",\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Add\"));\n  }\n\n}\n\nexport default Overlay;","map":{"version":3,"sources":["/Users/cameliaonu/Documents/TripsProject/front-end/src/components/overlayComponent/overlay.js"],"names":["React","Autocomplete","getMarkersLayer","Overlay","Component","constructor","props","state","value","items","map","onChangeHandler","event","setState","promise","fetch","promiseResult","json","results","console","log","onSelectHandler","item","markerLayer","markersArray","addLayer","clickHandler","render","id","position","display","title","children","isHighlighted"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Autocomplete from  'react-autocomplete';\nimport {getMarkersLayer} from '../mapComponent/markerLayer.js';\n\nclass Overlay extends React.Component {\n\n constructor(props) {\n    super(props);\n    this.state = { \n\t\tvalue: '' ,\n\t\titems: [],\n\t\tmap : props.map\n\t};\n  }\n\n\tasync onChangeHandler(event, value){\n\t\tdebugger\n\t\tif(this.state.value !== \"\" && value === \"\"){\n\t\t\tthis.setState({ items: [] });\n\t\t}\n\n\t \tthis.setState({value});\n\t \tvar promise = await fetch(`https://places.cit.api.here.com/places/v1/autosuggest?at=47.151726,27.587914&q=${this.state.value}&app_id=eiPUTOVjxY1rwovi7Kwi&app_code=obXES72dtgrH1PgkTGNWNQ`);\n\t\tvar promiseResult = await promise.json();\n\t\tthis.setState({ items: promiseResult.results });\n\t\tconsole.log(promiseResult);\t\n\t}\n\n\tonSelectHandler(value, item){\n\t\tthis.setState({ value });\n\t\tvar markerLayer = getMarkersLayer(markersArray);\n\t\tthis.state.map.addLayer(markerLayer);\n\n\t}\n\n\tclickHandler(){\n\t}\n\n\trender() {\n    return <div className=\"overlay\">\n    \t\t\t<div className=\"autocompleteComponent\">\n\t\t    \t\t<Autocomplete\n\t\t\t          value={ this.state.value }\n\t\t\t          inputProps={{ id: 'states-autocomplete' }}\n\t\t\t          wrapperStyle={{ position: 'relative', display: 'inline-block' }}\n\t\t\t          items={ this.state.items }\n\t\t\t          getItemValue={ item => item.title }\n\t\t\t          onChange={(event, value) => this.onChangeHandler(event, value) }\n\t\t\t          onSelect={(value, item) => this.onSelectHandler(value, item) }\n\t\t\t          renderMenu={ children => (\n\t\t\t            <div className = \"menu\">\n\t\t\t              { children }\n\t\t\t            </div>\n\t\t\t          )}\n\t\t\t          renderItem={ (item, isHighlighted) => (\n\t\t\t            <div\n\t\t\t              className={`item ${isHighlighted ? 'item-highlighted' : ''}`}\n\t\t\t              key={ item.id } >\n\t\t\t              { item.title }\n\t\t\t            </div>\n\t\t\t          )}\n\t\t\t        />  \n    \t\t\t</div>\n    \t\t\t<button \n    \t\t\t\tclassName=\"addButton\"\n    \t\t\t\tonClick={this.clickHandler}>Add</button>\n    \t</div>;\n  }\n}\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}